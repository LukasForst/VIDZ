{
    "swagger" : "2.0",
    
    "host" : "52773-1-xyz.labs.learning.intersystems.com",
    "basePath" : "/rest/app",

    "info" : {
      "description" : "An API for managing patients using InterSystems IRIS",
      "version" : "1.0.0",
      "title" : "Patient Management API",
      "license" : {
        "name" : "Apache 2.0",
        "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "schemes" : [ "http" ],
    "paths" : {
      "/patients" : {
        "get" : {
          "description" : "Returns all patients\n",
          "operationId" : "QueryPatients",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "mrn",
            "in" : "query",
            "description" : "Medical Record Number",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "br",
            "in" : "query",
            "description" : "BirthNumber",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "firstName",
            "in" : "query",
            "description" : "Patient First Name",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "lastName",
            "in" : "query",
            "description" : "Patient Last Name",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "Success"
            },
            "500" : {
              "description" : "Server error"
            }
          }
        }
      },
      "/patient" : {
        "post" : {
          "description" : "Create a new patient. ID is autogenerated. Other info must be provided in the request body. Returns new patient and the URL it can be reached with\n",
          "operationId" : "CreatePatient",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
                "$ref" : "#/definitions/Patient"
            }
          }],
          "responses" : {
            "201" : {
              "description" : "Created"
            },
            "400" : {
              "description" : "Invalid message body"
            },
            "500" : {
              "description" : "Server error"
            }
          }
        }
    },
    "/patient/{id}" : {
        "get" : {
            "description" : "Retrieve existing Patient given ID. Returns Patient\n",
            "operationId" : "RetrievePatient",
            "produces" : [ "application/json" ],
            "parameters" : [ {
              "name" : "id",
              "in" : "path",
              "description" : "Patient ID",
              "required" : true,
              "type" : "integer"
            }],
            "responses" : {
              "200" : {
                "description" : "Success"
              },
              "404" : {
                "description" : "Patient not found"
              },
              "500" : {
                "description" : "Server error"
              }
            }
          },
        "put" : {
          "description" : "Update existing patient given ID and data. Updates the overall patient info. Returns updated patient\n",
          "operationId" : "UpdatePatient",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "Patient ID",
            "required" : true,
            "type" : "integer"
          }, {
            "in" : "body",
            "name" : "body",
            "description" : "Patient Data",
            "required" : true,
            "schema" : {
                "$ref" : "#/definitions/Patient"
            }
          }],
          "responses" : {
            "200" : {
              "description" : "Success"
            },
            "400" : {
              "description" : "Invalid message body"
            },
            "404" : {
              "description" : "Patient not found"
            },
            "500" : {
              "description" : "Server error"
            }
          }
        },
        "delete" : {
          "description" : "Delete existing Patient with given ID. Returns deleted patient\n",
          "operationId" : "DeletePatient",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "id",
            "in" : "path",
            "description" : "Patient ID",
            "required" : true,
            "type" : "integer"
          }],
          "responses" : {
            "200" : {
              "description" : "Success"
            },
            "404" : {
              "description" : "Patient not found"
            }
          }
        }
      }
    },
    "definitions" : {
        "Patient" : {
            "type" : "object",
            "properties" :  {
                "MRN" : {
                    "type" : "string"
                },
                "BirthNumber" : {
                    "type" : "string"
                },
                "DateOfBirth" : {
                    "type" : "string"
                },
                "Gender" : {
                    "type" : "string",
                    "enum" : [ "M", "F", "O", "U" ]
                },
                "Name" : {
                    "type" : "object",
                    "properties" : {
                        "Prefix" : {
                            "type" : "string"
                        },
                        "FirstName" : {
                            "type" : "string"
                        },
                        "LastName" : {
                            "type" : "string"
                        },
                        "Suffix" : {
                            "type" : "string"
                        }
                    }
                },
                "Address" : {
                    "type" : "object",
                    "properties" : {
                        "Street" : {
                            "type" : "string"
                        },
                        "City" : {
                            "type" : "string"
                        },
                        "PostalCode" : {
                            "type" : "string"
                        },
                        "Country" : {
                            "type" : "string"
                        }
                    }
                },
                "Phone" : {
                    "type" : "string"
                },
                "EMail" : {
                    "type" : "string"
                }
            }

        }
    }
}
  